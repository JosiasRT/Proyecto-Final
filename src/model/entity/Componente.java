package model.entity; // Package declaration based on your project structure

import java.math.BigDecimal; // Import for BigDecimal

public abstract class Componente {
    protected int componenteID;
    protected String numeroSerie;
    protected String tipoComponente; // Added to base class for easier handling
    protected BigDecimal precio; // Changed to BigDecimal
    protected int cantidadDisponible;

    // Constructor for existing components (with ID from DB)
    public Componente(int componenteID, String numeroSerie, String tipoComponente, BigDecimal precio,
            int cantidadDisponible) {
        this.componenteID = componenteID;
        this.numeroSerie = numeroSerie;
        this.tipoComponente = tipoComponente;
        this.precio = precio;
        this.cantidadDisponible = cantidadDisponible;
    }

    // Constructor for new components (without ID, will be generated by DB)
    public Componente(String numeroSerie, String tipoComponente, BigDecimal precio, int cantidadDisponible) {
        this.numeroSerie = numeroSerie;
        this.tipoComponente = tipoComponente;
        this.precio = precio;
        this.cantidadDisponible = cantidadDisponible;
    }

    // Getters
    public int getComponenteID() {
        return componenteID;
    }

    public String getNumeroSerie() {
        return numeroSerie;
    }

    public String getTipoComponente() {
        return tipoComponente;
    }

    public BigDecimal getPrecio() {
        return precio;
    }

    public int getCantidadDisponible() {
        return cantidadDisponible;
    }

    // Setters (if needed, but for ID and other properties often set via
    // constructor/DAO)
    public void setComponenteID(int componenteID) {
        this.componenteID = componenteID;
    }

    public void setNumeroSerie(String numeroSerie) {
        this.numeroSerie = numeroSerie;
    }

    public void setTipoComponente(String tipoComponente) {
        this.tipoComponente = tipoComponente;
    }

    public void setPrecio(BigDecimal precio) {
        this.precio = precio;
    }

    public void setCantidadDisponible(int cantidadDisponible) {
        this.cantidadDisponible = cantidadDisponible;
    }

    // Abstract methods for common subtype attributes like Marca and Modelo
    // This forces subclasses to implement them, allowing generic access in the
    // table display
    public abstract String getMarca();

    public abstract String getModelo(); // Not all will have 'Modelo', can return null or empty string
}
